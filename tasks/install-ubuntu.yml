---
- name: Wait if apt is already running
  become: true
  raw: fuser /var/lib/apt/lists/lock
  register: ekara_install_lock_result
  until: ekara_install_lock_result.rc == 1
  retries: 60
  delay: 1
  failed_when: ekara_install_lock_result.rc == 0
  changed_when: false
  ignore_errors: true
- name: APT in progress
  fail:
    msg: "The system may not be provisioned according to another APT command in progress."
  when: ekara_install_lock_result.rc == 0
- name: Add python modules with proxy
  become: true
  raw: >
    test -e /usr/bin/python ||
    export http_proxy={{ekara_install_proxy.http_proxy}} &&
    export https_proxy={{ekara_install_proxy.https_proxy}} &&
    export no_proxy={{ekara_install_proxy.no_proxy}} &&
    apt -y update && apt install -y python-minimal
  when: >
    (ekara_install_proxy.http_proxy is defined and ekara_install_proxy.http_proxy != "") or
    (ekara_install_proxy.https_proxy is defined and ekara_install_proxy.https_proxy != "")
  changed_when: false

- name: Add python modules
  become: true
  raw: >
    test -e /usr/bin/python ||
    apt -y update && apt install -y python-minimal
  when: >
    (ekara_install_proxy.http_proxy is not defined or ekara_install_proxy.http_proxy == "") and
    (ekara_install_proxy.https_proxy is not defined or ekara_install_proxy.https_proxy == "")
  changed_when: false

- name: Run the equivalent of "apt-get update" as a separate step
  become: true
  apt:
    update_cache: true
  environment: "{{ekara_install_proxy}}"

- name: Install provided dependencies
  become: true
  apt:
    name:
    - apt-transport-https
    - ca-certificates
    - nfs-common
    - python
    - ntp
    - nvme-cli
    state: present
    update_cache: true
  environment: "{{ekara_install_proxy}}"

- name: Update all packages to the latest version
  become: true
  apt:
    upgrade: dist
  register: upgradeMachine
  environment: "{{ekara_install_proxy}}"

- name: reboot server
  become: true
  shell: sleep 2 && /sbin/shutdown -r now "System reboot"
  async: 1
  poll: 0
  when: upgradeMachine.changed

- pause: seconds=10
  when: upgradeMachine.changed

- name: Wait for restart
  become: false
  wait_for_connection:
    delay: 5
    timeout: 180
  when: upgradeMachine.changed
